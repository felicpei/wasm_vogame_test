[package]
name = "veloren-network"
version = "0.3.0"
authors = ["Marcel Märtens <marcel.cochem@googlemail.com>"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
metrics = ["prometheus", "network-protocol/metrics"]
compression = ["lz-fear"]   #压缩
default = ["metrics", "compression"]

[dependencies]

network-protocol = { package = "veloren-network-protocol", path = "protocol" }
tokio-stream = { version = "=0.1.8", default-features = false }
rand = { version = "0.8" }

#serialisation
bincode = "1.3.2"
serde = { version = "1.0" }

#sending
crossbeam-channel = "0.5"

#tracing and metrics
prometheus = { version = "=0.13.0", default-features = false, optional = true }

#async
futures-core = { version = "0.3", default-features = false }
futures-util = { version = "0.3.7", default-features = false, features = ["std"] }
async-channel = "1.5.1" #use for .close() channels


#stream flags
bitflags = "1.2.1"
lz-fear = { version = "0.1.1", optional = true }

# async traits
async-trait = "0.1.42"
bytes = "^1"

# faster HashMaps
hashbrown = { version = "0.11" }

#log
log = "0.4"

[target.'cfg(target_arch = "wasm32")'.dependencies]
instant = { version = "0.1", features = [ "wasm-bindgen", "inaccurate" ] }
tokio = { version = "=1.17.0", default-features = false, features = ["macros", "rt", "time"] }


[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
socket2 = { version = "0.4.4", default-features = false}
tokio = { version = "=1.17.0", default-features = false, features = ["io-util", "macros", "rt", "net", "time"] }
instant = "0.1"